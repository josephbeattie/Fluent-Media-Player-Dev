<uc:MediaPageBase
    x:Class="Rise.App.Views.AlbumsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:app="using:Rise.App"
    xmlns:collections="using:Rise.Data.Collections"
    xmlns:conv="using:Rise.App.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:enums="using:Rise.Common.Enums"
    xmlns:markup="using:Rise.Common.Extensions.Markup"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:tkitanim="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:uc="using:Rise.App.UserControls"
    xmlns:viewmodels="using:Rise.App.ViewModels"
    x:Name="PageRoot"
    d:Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    d:DesignHeight="320"
    d:DesignWidth="500"
    mc:Ignorable="d">

    <uc:MediaPageBase.Resources>
        <conv:NullToBoolean x:Key="NullToBool" />
        <conv:BoolToRoundedCorners x:Key="BoolToRounded" />
    </uc:MediaPageBase.Resources>

    <Grid Padding="56,56,56,0" d:Padding="20,12">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>

        <muxc:TeachingTip
            x:Name="DiscyOnAlbum"
            Title="{markup:ResourceHelper Name=/HelpTips/DiscyOnAlbumH}"
            ActionButtonContent="{markup:ResourceHelper Name=LearnMore}"
            CloseButtonContent="{markup:ResourceHelper Name=GotIt}"
            IsLightDismissEnabled="True"
            PlacementMargin="20"
            PreferredPlacement="Auto"
            Subtitle="{markup:ResourceHelper Name=/HelpTips/DiscyOnAlbumDesc}">
            <muxc:TeachingTip.HeroContent>
                <Image Source="/Assets/Branding/DiscyBanner.png" />
            </muxc:TeachingTip.HeroContent>
        </muxc:TeachingTip>

        <TextBlock Style="{StaticResource TitleTextBlockStyle}" Text="{markup:ResourceHelper Name=Albums}" />
        <CommandBar
            Grid.Row="1"
            Margin="-12,0"
            HorizontalAlignment="Left"
            Background="Transparent"
            DefaultLabelPosition="Right">
            <AppBarButton
                Command="{x:Bind MediaViewModel.PlaySingleItemCommand}"
                CommandParameter="{x:Bind SelectedItem, Mode=OneWay}"
                Icon="Play"
                Style="{StaticResource AppBarButtonCompactStyle}"
                ToolTipService.ToolTip="{markup:ResourceHelper Name=Play}" />

            <AppBarSeparator />

            <AppBarButton
                Command="{x:Bind MediaViewModel.ShuffleSingleItemCommand}"
                CommandParameter="{x:Bind SelectedItem, Mode=OneWay}"
                Icon="Shuffle"
                Label="{markup:ResourceHelper Name=Shuffle}" />

            <AppBarButton IsEnabled="{x:Bind SelectedItem, Converter={StaticResource NullToBool}, Mode=OneWay}" Label="{markup:ResourceHelper Name=AddTo}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xECC8;" />
                </AppBarButton.Icon>

                <AppBarButton.Flyout>
                    <MenuFlyout x:Name="AddToBar">
                        <MenuFlyoutItem Command="{x:Bind AddToPlaylistCommand}" Text="{markup:ResourceHelper Name=NewPlaylist}">
                            <MenuFlyoutItem.Icon>
                                <FontIcon FontFamily="{StaticResource PlayerIconsFontFamily}" Glyph="&#xE93F;" />
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>

            <AppBarSeparator />

            <AppBarButton
                Icon="Delete"
                IsEnabled="False"
                Label="{markup:ResourceHelper Name=RemoveThing}"
                Style="{StaticResource AppBarButtonCompactStyle}"
                ToolTipService.ToolTip="{markup:ResourceHelper Name=RemoveThing}" />
            <AppBarButton
                Command="{x:Bind EditItemCommand}"
                CommandParameter="{x:Bind SelectedItem, Mode=OneWay}"
                Icon="Edit"
                IsEnabled="{x:Bind SelectedItem, Converter={StaticResource NullToBool}, Mode=OneWay}"
                Style="{StaticResource AppBarButtonCompactStyle}"
                ToolTipService.ToolTip="{markup:ResourceHelper Name=PropertiesInfo}" />

            <AppBarSeparator />

            <AppBarButton Label="{markup:ResourceHelper Name=View}">
                <AppBarButton.Icon>
                    <FontIcon Glyph="&#xECAA;" />
                </AppBarButton.Icon>

                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <muxc:RadioMenuFlyoutItem
                            Command="{x:Bind UpdateViewModeCommand}"
                            CommandParameter="{x:Bind enums:AlbumViewMode.VerticalTile}"
                            GroupName="ViewModes"
                            IsChecked="{x:Bind app:App.SViewModel.AlbumViewMode.Equals(enums:AlbumViewMode.VerticalTile)}"
                            Text="{markup:ResourceHelper Name=TilesVertical}" />
                        <muxc:RadioMenuFlyoutItem
                            Command="{x:Bind UpdateViewModeCommand}"
                            CommandParameter="{x:Bind enums:AlbumViewMode.HorizontalTile}"
                            GroupName="ViewModes"
                            IsChecked="{x:Bind app:App.SViewModel.AlbumViewMode.Equals(enums:AlbumViewMode.HorizontalTile)}"
                            Text="{markup:ResourceHelper Name=TilesHorizontal}" />

                        <MenuFlyoutSeparator />

                        <ToggleMenuFlyoutItem IsEnabled="False" Text="{markup:ResourceHelper Name=CardBackground}" />
                        <ToggleMenuFlyoutItem IsChecked="{x:Bind SViewModel.RoundedAlbumArt, Mode=TwoWay}" Text="{markup:ResourceHelper Name=RoundedAlbumArt}" />

                        <MenuFlyoutSeparator />

                        <MenuFlyoutItem IsEnabled="False" Text="{markup:ResourceHelper Name=MoreOptions}" />

                        <MenuFlyoutSubItem Text="{markup:ResourceHelper Name=Show}">
                            <ToggleMenuFlyoutItem IsChecked="{x:Bind SViewModel.ShowTitleInAlbums, Mode=TwoWay}" Text="{markup:ResourceHelper Name=AlbumTitle}" />
                            <ToggleMenuFlyoutItem IsChecked="{x:Bind SViewModel.ShowThumbnailInAlbums, Mode=TwoWay}" Text="{markup:ResourceHelper Name=AlbumArt}" />
                            <ToggleMenuFlyoutItem IsChecked="{x:Bind SViewModel.ShowArtistInAlbums, Mode=TwoWay}" Text="{markup:ResourceHelper Name=ArtistOrArtists}" />
                            <ToggleMenuFlyoutItem IsChecked="{x:Bind SViewModel.ShowGenreInAlbums, Mode=TwoWay}" Text="{markup:ResourceHelper Name=Genre}" />
                            <ToggleMenuFlyoutItem IsChecked="{x:Bind SViewModel.ShowReleaseYearInAlbums, Mode=TwoWay}" Text="{markup:ResourceHelper Name=ReleaseYear}" />

                            <ToggleMenuFlyoutItem IsEnabled="False" Text="{markup:ResourceHelper Name=Rating}" />
                        </MenuFlyoutSubItem>
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>

            <AppBarButton Icon="Sort" Label="{markup:ResourceHelper Name=Sort}">
                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <muxc:RadioMenuFlyoutItem
                            Command="{x:Bind MediaViewModel.GroupAlphabeticallyCommand}"
                            CommandParameter="GAlbumTitle|AlbumTitle"
                            Text="{markup:ResourceHelper Name=Title}" />
                        <muxc:RadioMenuFlyoutItem
                            Command="{x:Bind MediaViewModel.SortByCommand}"
                            CommandParameter="GAlbumArtist"
                            Text="{markup:ResourceHelper Name=ArtistOrArtists}" />
                        <muxc:RadioMenuFlyoutItem
                            Command="{x:Bind MediaViewModel.SortByCommand}"
                            CommandParameter="GAlbumGenres"
                            Text="{markup:ResourceHelper Name=Genre}" />
                        <muxc:RadioMenuFlyoutItem
                            Command="{x:Bind MediaViewModel.SortByCommand}"
                            CommandParameter="GAlbumYear"
                            Text="{markup:ResourceHelper Name=ReleaseYear}" />

                        <MenuFlyoutSeparator />

                        <muxc:RadioMenuFlyoutItem
                            Command="{x:Bind MediaViewModel.UpdateSortDirectionCommand}"
                            CommandParameter="{x:Bind collections:SortDirection.Ascending}"
                            GroupName="SortDirection"
                            Text="{markup:ResourceHelper Name=Ascending}" />
                        <muxc:RadioMenuFlyoutItem
                            Command="{x:Bind MediaViewModel.UpdateSortDirectionCommand}"
                            CommandParameter="{x:Bind collections:SortDirection.Descending}"
                            GroupName="SortDirection"
                            Text="{markup:ResourceHelper Name=Descending}" />
                    </MenuFlyout>
                </AppBarButton.Flyout>
            </AppBarButton>

            <AppBarSeparator />

            <AppBarButton
                Click="AddFolders_Click"
                Icon="NewFolder"
                Label="{markup:ResourceHelper Name=/Settings/AddFolders}"
                ToolTipService.ToolTip="{markup:ResourceHelper Name=/Settings/AddFolders}" />
        </CommandBar>

        <SemanticZoom Grid.Row="2" Margin="-56,0">
            <SemanticZoom.ZoomedInView>
                <GridView
                    x:Name="MainGrid"
                    Grid.Row="2"
                    Padding="48,0,48,120"
                    tkitanim:ItemsReorderAnimation.Duration="0:0:0.2"
                    IsItemClickEnabled="True"
                    ItemClick="MainGrid_ItemClick"
                    ItemsSource="{x:Bind MediaViewModel.Items}"
                    SelectedItem="{x:Bind SelectedItem, Mode=TwoWay}"
                    SelectionMode="Single">
                    <GridView.ContextFlyout>
                        <MenuFlyout Opening="MenuFlyout_Opening">
                            <MenuFlyoutItem
                                Command="{x:Bind MediaViewModel.PlaySingleItemCommand}"
                                CommandParameter="{x:Bind SelectedItem, Mode=OneWay}"
                                Icon="Play"
                                Text="{markup:ResourceHelper Name=Play}" />
                            <MenuFlyoutItem
                                Command="{x:Bind MediaViewModel.ShuffleSingleItemCommand}"
                                CommandParameter="{x:Bind SelectedItem, Mode=OneWay}"
                                Icon="Shuffle"
                                Text="{markup:ResourceHelper Name=ShuffleAlbum}" />

                            <MenuFlyoutItem
                                Command="{x:Bind GoToArtistCommand}"
                                CommandParameter="{x:Bind SelectedItem.Artist, Mode=OneWay}"
                                Icon="People"
                                Text="{markup:ResourceHelper Name=ShowArtist}" />

                            <MenuFlyoutSeparator />

                            <MenuFlyoutSubItem x:Name="AddTo" Text="{markup:ResourceHelper Name=AddTo}">
                                <MenuFlyoutSubItem.Icon>
                                    <FontIcon Glyph="&#xECC8;" />
                                </MenuFlyoutSubItem.Icon>

                                <MenuFlyoutItem Command="{x:Bind AddToPlaylistCommand}" Text="{markup:ResourceHelper Name=NewPlaylist}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="ms-appx:///Assets/MediaPlayerIcons.ttf#Media Player Fluent Icons" Glyph="&#xE93F;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                            </MenuFlyoutSubItem>

                            <MenuFlyoutItem
                                Icon="Share"
                                IsEnabled="False"
                                Text="{markup:ResourceHelper Name=Share}" />

                            <MenuFlyoutSeparator />

                            <MenuFlyoutItem
                                Click="AskDiscy_Click"
                                Icon="Help"
                                Text="{markup:ResourceHelper Name=AskDiscy}" />

                            <MenuFlyoutSeparator />

                            <MenuFlyoutItem
                                Icon="Delete"
                                IsEnabled="False"
                                Text="{markup:ResourceHelper Name=RemoveThing}" />

                            <MenuFlyoutItem
                                Command="{x:Bind EditItemCommand}"
                                CommandParameter="{x:Bind SelectedItem, Mode=OneWay}"
                                Icon="Edit"
                                Text="{markup:ResourceHelper Name=PropertiesInfo}" />
                        </MenuFlyout>
                    </GridView.ContextFlyout>

                    <GridView.GroupStyle>
                        <GroupStyle HeaderTemplate="{StaticResource DefaultGroupStyleHeaderTemplate}" HidesIfEmpty="True" />
                    </GridView.GroupStyle>

                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="viewmodels:AlbumViewModel" x:DefaultBindMode="OneWay">
                            <uc:AlbumData
                                Album="{x:Bind Mode=OneTime}"
                                GoToArtistCommand="{Binding GoToArtistCommand, ElementName=PageRoot, Mode=OneTime}"
                                ShowArtist="{x:Bind app:App.SViewModel.ShowArtistInAlbums}"
                                ShowGenres="{x:Bind app:App.SViewModel.ShowGenreInAlbums}"
                                ShowReleaseYear="{x:Bind app:App.SViewModel.ShowReleaseYearInAlbums}"
                                ShowThumbnail="{x:Bind app:App.SViewModel.ShowThumbnailInAlbums}"
                                ShowTitle="{x:Bind app:App.SViewModel.ShowTitleInAlbums}"
                                ThumbnailCornerRadius="{x:Bind app:App.SViewModel.RoundedAlbumArt, Converter={StaticResource BoolToRounded}, ConverterParameter=ForAlbum}"
                                ViewMode="{x:Bind app:App.SViewModel.AlbumViewMode}" />
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </GridView>
            </SemanticZoom.ZoomedInView>

            <SemanticZoom.ZoomedOutView>
                <GridView
                    x:Name="ZoomedOutGrid"
                    Padding="56,0"
                    VerticalAlignment="Center"
                    ItemTemplate="{StaticResource GroupOverviewItemTemplate}"
                    ItemsSource="{x:Bind MediaViewModel.Items.CollectionGroups}" />
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="SortingStates">
                <VisualState x:Name="NonAlphabeticalSorting" />
                <VisualState x:Name="AlphabeticalSorting">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind MediaViewModel.GroupingAlphabetically, Mode=OneWay}" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="ZoomedOutGrid.ItemTemplate" Value="{StaticResource GroupOverviewLetterItemTemplate}" />
                        <Setter Target="ZoomedOutGrid.HorizontalAlignment" Value="Center" />
                        <Setter Target="ZoomedOutGrid.MaxWidth" Value="512" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</uc:MediaPageBase>
