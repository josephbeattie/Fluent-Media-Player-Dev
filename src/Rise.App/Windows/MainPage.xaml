<Page
    x:Class="Rise.App.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:conv="using:Rise.App.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:Rise.Common.Helpers"
    xmlns:local="using:Rise.App.Views"
    xmlns:markup="using:Rise.Common.Extensions.Markup"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:Microsoft.UI.Xaml.Media"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:nav="using:Rise.Data.Navigation"
    xmlns:selectors="using:Rise.App.TemplateSelectors"
    xmlns:skuc="using:SimpleKit.WindowsRuntime.UI.Controls"
    xmlns:uc="using:Rise.App.UserControls"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:viewmodels="using:Rise.App.ViewModels"
    Loaded="OnPageLoaded"
    Unloaded="OnPageUnloaded"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.ThemeDictionaries>
                <ResourceDictionary x:Key="Default">
                    <media:AcrylicBrush
                        x:Key="MediaTransportControlsPanelBackground"
                        BackgroundSource="Backdrop"
                        FallbackColor="#2C2C2C"
                        TintColor="{x:Bind SViewModel.GlazeColors, Mode=OneWay}"
                        TintLuminosityOpacity="0"
                        TintOpacity="0" />
                </ResourceDictionary>

                <ResourceDictionary x:Key="Light">
                    <media:AcrylicBrush
                        x:Key="MediaTransportControlsPanelBackground"
                        BackgroundSource="Backdrop"
                        FallbackColor="#F9F9F9"
                        TintColor="{x:Bind SViewModel.GlazeColors, Mode=OneWay}"
                        TintLuminosityOpacity="0"
                        TintOpacity="0" />
                </ResourceDictionary>

                <ResourceDictionary x:Key="HighContrast">
                    <SolidColorBrush x:Key="MediaTransportControlsPanelBackground" Color="{ThemeResource SystemColorWindowColor}" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <conv:BooleanToVisibility x:Key="BoolToVis" />
            <conv:UintToStringConverter x:Key="UIntToStr" />
            <conv:StreamToBitmap x:Key="StrmToBmp" />

            <conv:ResourceFallback x:Key="ResFallback" />
            <conv:TimeSpanToString x:Key="TimeToStr" />

            <conv:NavigationItemIconConverter x:Key="NavItemToIcon" />

            <!--  This top margin is the height of the custom TitleBar  -->
            <Thickness x:Key="NavigationViewContentMargin">0,48,0,0</Thickness>
            <Thickness x:Key="NavigationViewHeaderMargin">0,0,0,0</Thickness>

            <Flyout
                x:Name="QueueFlyout"
                Closed="QueueFlyout_Closed"
                ShouldConstrainToRootBounds="False">
                <uc:DefaultQueueFlyout Width="300" Height="300" />
            </Flyout>

            <ImageBrush
                x:Name="CurrentItemThumbnailBrush"
                ImageSource="{x:Bind MPViewModel.PlayingItemProperties.Thumbnail, Mode=OneWay, Converter={StaticResource StrmToBmp}}"
                Stretch="Uniform" />

            <Flyout
                x:Name="PlayingItemMusicFlyout"
                x:DefaultBindMode="OneWay"
                Placement="TopEdgeAlignedLeft">
                <Grid
                    MaxWidth="412"
                    MaxHeight="144"
                    ColumnSpacing="12"
                    RowSpacing="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="144" />
                        <ColumnDefinition Width="1*" MaxWidth="268" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>

                    <Border
                        Grid.RowSpan="4"
                        CornerRadius="8"
                        ToolTipService.ToolTip="{x:Bind MPViewModel.PlayingItemProperties.Artist, Converter={StaticResource ResFallback}, ConverterParameter=UnknownArtistResource}">
                        <Image Source="{x:Bind CurrentItemThumbnailBrush.ImageSource, Mode=OneWay}" />
                    </Border>

                    <TextBlock
                        Grid.Column="1"
                        HorizontalAlignment="Left"
                        FontSize="18"
                        FontWeight="Bold"
                        MaxLines="2"
                        Text="{x:Bind MPViewModel.PlayingItemProperties.Title}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="Wrap" />
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="1"
                        FontSize="16"
                        FontWeight="SemiBold"
                        Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                        MaxLines="1"
                        Text="{x:Bind MPViewModel.PlayingItemProperties.Album, Converter={StaticResource ResFallback}, ConverterParameter=UnknownAlbumResource}"
                        TextTrimming="CharacterEllipsis" />

                    <TextBlock
                        Grid.Row="2"
                        Grid.Column="1"
                        FontWeight="SemiBold"
                        Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                        Text="{x:Bind MPViewModel.PlayingItemProperties.Artist, Converter={StaticResource ResFallback}, ConverterParameter=UnknownArtistResource}"
                        TextTrimming="CharacterEllipsis" />

                    <Grid
                        Grid.Row="3"
                        Grid.Column="1"
                        VerticalAlignment="Bottom"
                        ColumnSpacing="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <Button
                            HorizontalAlignment="Stretch"
                            Click="OnAlbumButtonClick"
                            Style="{StaticResource AccentButtonStyle}">
                            <Button.Content>
                                <Grid ColumnSpacing="6">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <FontIcon FontSize="16" Glyph="&#xE93C;" />
                                    <TextBlock Grid.Column="1" Text="{markup:ResourceHelper Name=GoToAlbum}" />
                                </Grid>
                            </Button.Content>
                        </Button>

                        <Button
                            Grid.Column="1"
                            HorizontalAlignment="Stretch"
                            Click="OnArtistButtonClick"
                            Style="{StaticResource AccentButtonStyle}">
                            <Button.Content>
                                <Grid ColumnSpacing="6">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <FontIcon FontSize="16" Glyph="&#xE13D;" />
                                    <TextBlock Grid.Column="1" Text="{markup:ResourceHelper Name=GoToArtist}" />
                                </Grid>
                            </Button.Content>
                        </Button>
                    </Grid>
                </Grid>
            </Flyout>

            <Flyout
                x:Name="PlayingItemVideoFlyout"
                x:DefaultBindMode="OneWay"
                Placement="TopEdgeAlignedLeft">
                <Grid
                    MaxWidth="412"
                    MaxHeight="144"
                    ColumnSpacing="12"
                    RowSpacing="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="144" />
                        <ColumnDefinition Width="1*" MaxWidth="268" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Border
                        Grid.RowSpan="3"
                        CornerRadius="8"
                        ToolTipService.ToolTip="{x:Bind MPViewModel.PlayingItemProperties.Artist, Converter={StaticResource ResFallback}, ConverterParameter=UnknownArtistResource}">
                        <Image Source="{x:Bind CurrentItemThumbnailBrush.ImageSource, Mode=OneWay}" />
                    </Border>

                    <TextBlock
                        Grid.Column="1"
                        FontSize="18"
                        FontWeight="Bold"
                        MaxLines="2"
                        Text="{x:Bind MPViewModel.PlayingItemProperties.Title}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="Wrap" />
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="1"
                        FontSize="16"
                        FontWeight="SemiBold"
                        Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                        Text="{x:Bind MPViewModel.PlayingItemProperties.Artist, Converter={StaticResource ResFallback}, ConverterParameter=UnknownArtistResource}"
                        TextTrimming="CharacterEllipsis" />

                    <TextBlock
                        Grid.Row="2"
                        Grid.Column="1"
                        FontWeight="SemiBold"
                        Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                        Text="{x:Bind MPViewModel.PlayingItemProperties.Year, Converter={StaticResource UIntToStr}}"
                        TextTrimming="CharacterEllipsis" />
                </Grid>
            </Flyout>

            <selectors:NavigationItemTemplateSelector x:Key="NavViewItemTemplateSelector">
                <selectors:NavigationItemTemplateSelector.DestinationTemplate>
                    <DataTemplate x:DataType="nav:NavigationItemDestination">
                        <muxc:NavigationViewItem
                            AccessKey="{x:Bind AccessKey}"
                            AccessKeyInvoked="NavigationViewItem_AccessKeyInvoked"
                            AutomationProperties.AutomationId="{x:Bind Id}"
                            AutomationProperties.Name="{x:Bind Label}"
                            Content="{x:Bind markup:ResourceHelper.GetString(Label)}"
                            ContextRequested="NavigationViewItem_ContextRequested"
                            Icon="{x:Bind Converter={StaticResource NavItemToIcon}}"
                            MenuItemsSource="{x:Bind Children}"
                            Tag="{x:Bind}"
                            Visibility="{x:Bind IsVisible, Mode=OneWay}" />
                    </DataTemplate>
                </selectors:NavigationItemTemplateSelector.DestinationTemplate>

                <selectors:NavigationItemTemplateSelector.PlaylistTemplate>
                    <DataTemplate x:DataType="viewmodels:PlaylistViewModel">
                        <muxc:NavigationViewItem
                            AutomationProperties.AutomationId="{x:Bind Id}"
                            AutomationProperties.Name="{x:Bind Title, Mode=OneWay}"
                            Content="{x:Bind Title, Mode=OneWay}"
                            Tag="{x:Bind}">
                            <muxc:NavigationViewItem.Icon>
                                <BitmapIcon ShowAsMonochrome="False" UriSource="{x:Bind Icon, Mode=OneWay}" />
                            </muxc:NavigationViewItem.Icon>
                        </muxc:NavigationViewItem>
                    </DataTemplate>
                </selectors:NavigationItemTemplateSelector.PlaylistTemplate>

                <selectors:NavigationItemTemplateSelector.HeaderTemplate>
                    <DataTemplate x:DataType="nav:NavigationItemHeader">
                        <muxc:NavigationViewItemHeader
                            AutomationProperties.AutomationId="{x:Bind Id}"
                            Content="{x:Bind markup:ResourceHelper.GetString(Label), Mode=OneWay}"
                            Visibility="{x:Bind IsVisible, Mode=OneWay}" />
                    </DataTemplate>
                </selectors:NavigationItemTemplateSelector.HeaderTemplate>

                <selectors:NavigationItemTemplateSelector.SeparatorTemplate>
                    <DataTemplate x:DataType="nav:NavigationItemSeparator">
                        <muxc:NavigationViewItemSeparator AutomationProperties.AutomationId="{x:Bind Id}" Visibility="{x:Bind IsVisible, Mode=OneWay}" />
                    </DataTemplate>
                </selectors:NavigationItemTemplateSelector.SeparatorTemplate>
            </selectors:NavigationItemTemplateSelector>

            <MenuFlyout x:Key="DefaultItemFlyout" x:Name="DefaultItemFlyout">
                <MenuFlyoutItem
                    x:Name="TopOption"
                    Command="{x:Bind NavDataSource.MoveToTopCommand}"
                    CommandParameter="{x:Bind RightClickedItem, Mode=OneWay}"
                    Icon="Upload"
                    Text="{markup:ResourceHelper Name=MoveToTop}" />

                <MenuFlyoutItem
                    x:Name="UpOption"
                    Command="{x:Bind NavDataSource.MoveUpCommand}"
                    CommandParameter="{x:Bind RightClickedItem, Mode=OneWay}"
                    Text="{markup:ResourceHelper Name=MoveUp}">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE010;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>

                <MenuFlyoutItem
                    x:Name="DownOption"
                    Command="{x:Bind NavDataSource.MoveDownCommand}"
                    CommandParameter="{x:Bind RightClickedItem, Mode=OneWay}"
                    Text="{markup:ResourceHelper Name=MoveDown}">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE011;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>

                <MenuFlyoutItem
                    x:Name="BottomOption"
                    Command="{x:Bind NavDataSource.MoveToBottomCommand}"
                    CommandParameter="{x:Bind RightClickedItem, Mode=OneWay}"
                    Icon="Download"
                    Text="{markup:ResourceHelper Name=MoveToBottom}" />

                <MenuFlyoutSeparator />

                <MenuFlyoutItem
                    Command="{x:Bind NavDataSource.ToggleItemVisibilityCommand}"
                    CommandParameter="{x:Bind RightClickedItem, Mode=OneWay}"
                    Icon="UnPin"
                    Text="{markup:ResourceHelper Name=RemoveFromSidebar}" />

                <MenuFlyoutItem
                    Command="{x:Bind NavDataSource.HideGroupCommand}"
                    CommandParameter="{x:Bind RightClickedItem.Group, Mode=OneWay}"
                    Text="{markup:ResourceHelper Name=RemoveSection}">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xECC9;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </MenuFlyout>

            <MenuFlyout x:Key="RemoveItemFlyout" x:Name="RemoveItemFlyout">
                <MenuFlyoutItem
                    Command="{x:Bind NavDataSource.ToggleItemVisibilityCommand}"
                    CommandParameter="{x:Bind RightClickedItem, Mode=OneWay}"
                    Icon="UnPin"
                    Text="{markup:ResourceHelper Name=RemoveFromSidebar}" />
            </MenuFlyout>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid.Background>
            <SolidColorBrush Color="{x:Bind SViewModel.GlazeColors, Mode=OneWay}" />
        </Grid.Background>

        <Grid
            Height="48"
            VerticalAlignment="Top"
            Canvas.ZIndex="1">
            <skuc:TitleBar
                x:Name="AppTitleBar"
                VerticalAlignment="Stretch"
                Canvas.ZIndex="1">
                <skuc:TitleBar.Icon>
                    <IconSourceElement
                        Width="16"
                        Height="16"
                        IconSource="{StaticResource TitleBarAppIconSource}" />
                </skuc:TitleBar.Icon>

                <RichTextBlock
                    x:Name="AppTitle"
                    FontSize="12"
                    IsTextSelectionEnabled="False"
                    Visibility="Collapsed">
                    <Paragraph x:Name="DefaultTitleParagraph">
                        <Run x:Name="RiseSpan" FontWeight="SemiBold">Rise</Run>
                        <Span>Media Player</Span>
                    </Paragraph>
                </RichTextBlock>
            </skuc:TitleBar>

            <Grid
                x:Name="ControlsPanel"
                Padding="0,8"
                HorizontalAlignment="Right"
                Canvas.ZIndex="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button
                    x:Name="MoreButton"
                    VerticalAlignment="Stretch"
                    Style="{StaticResource TransparentButtonStyle}"
                    ToolTipService.ToolTip="{markup:ResourceHelper Name=MoreSettings}">
                    <Button.Content>
                        <FontIcon Glyph="&#xE712;" />
                    </Button.Content>

                    <Button.Flyout>
                        <MenuFlyout x:Name="ProfileMenu">
                            <MenuFlyoutItem
                                x:Name="Acc"
                                IsEnabled="{x:Bind LMViewModel.Authenticated.Equals(x:False), Mode=OneWay}"
                                Height="44"
                                Margin="3"
                                Click="Account_Click"
                                FontSize="14"
                                FontWeight="SemiBold"
                                Text="{x:Bind LMViewModel.Username, Mode=OneWay}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon x:Name="AccountPic" Glyph="&#xE13D;" />
                                </MenuFlyoutItem.Icon>

                                <MenuFlyoutItem.Background>
                                    <ImageBrush ImageSource="/Assets/Unavailable/MissingAccPic.png" />
                                </MenuFlyoutItem.Background>
                            </MenuFlyoutItem>

                            <MenuFlyoutSeparator />

                            <MenuFlyoutItem Click="Feedback_Click" Text="{markup:ResourceHelper Name=Feedback}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xED15;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>

                <Button
                    Grid.Column="1"
                    VerticalAlignment="Stretch"
                    Click="OpenSettings_Click"
                    Style="{StaticResource TransparentButtonStyle}"
                    ToolTipService.ToolTip="{markup:ResourceHelper Name=Settings}">
                    <Button.Content>
                        <FontIcon Glyph="&#xE713;" />
                    </Button.Content>
                </Button>
            </Grid>
        </Grid>

        <muxc:NavigationView
            x:Name="NavView"
            BackRequested="NavigationView_BackRequested"
            Canvas.ZIndex="0"
            CompactModeThresholdWidth="800"
            DisplayModeChanged="NavigationViewControl_DisplayModeChanged"
            ExpandedModeThresholdWidth="800"
            FooterMenuItemsSource="{x:Bind NavDataSource.AllItems.FooterItems}"
            IsBackEnabled="{x:Bind ContentFrame.CanGoBack, Mode=OneWay}"
            IsPaneToggleButtonVisible="True"
            IsTitleBarAutoPaddingEnabled="False"
            ItemInvoked="NavigationView_ItemInvoked"
            MenuItemTemplateSelector="{StaticResource NavViewItemTemplateSelector}"
            MenuItemsSource="{x:Bind NavDataSource.AllItems.MenuItems}"
            OpenPaneLength="260">
            <muxc:NavigationView.AutoSuggestBox>
                <AutoSuggestBox
                    x:Name="Search"
                    AutomationProperties.Name="Search"
                    PlaceholderText="{markup:ResourceHelper Name=SearchPlaceholder}"
                    QueryIcon="Find"
                    QuerySubmitted="OnSearchQuerySubmitted"
                    SuggestionChosen="OnSearchSuggestionChosen"
                    TextChanged="OnSearchTextChanged">
                    <AutoSuggestBox.ItemTemplate>
                        <DataTemplate x:DataType="viewmodels:SearchItemViewModel" x:DefaultBindMode="OneWay">
                            <Grid Padding="2,10" ColumnSpacing="20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>

                                <Border Height="40" CornerRadius="3">
                                    <Border.Background>
                                        <ImageBrush>
                                            <ImageBrush.ImageSource>
                                                <BitmapImage
                                                    DecodePixelHeight="40"
                                                    DecodePixelWidth="40"
                                                    UriSource="{x:Bind Thumbnail}" />
                                            </ImageBrush.ImageSource>
                                        </ImageBrush>
                                    </Border.Background>
                                </Border>

                                <StackPanel Grid.Column="1">
                                    <TextBlock Text="{x:Bind Title}" />
                                    <TextBlock Text="{x:Bind Subtitle}" Visibility="{x:Bind local:MainPage.IsStringEmpty(Subtitle)}" />
                                    <TextBlock
                                        Margin="0,3,0,0"
                                        FontSize="13"
                                        Text="{x:Bind ItemType}" />
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </AutoSuggestBox.ItemTemplate>
                </AutoSuggestBox>
            </muxc:NavigationView.AutoSuggestBox>

            <Grid>
                <Frame
                    x:Name="ContentFrame"
                    Navigated="OnNavigated"
                    NavigationFailed="OnNavigationFailed"
                    SizeChanged="OnContentFrameSizeChanged" />

                <Grid
                    Margin="16"
                    VerticalAlignment="Bottom"
                    d:DesignHeight="102">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Border
                        x:Name="IndexingTip"
                        Grid.Row="1"
                        Height="50"
                        Margin="-16,8,-16,-16"
                        Padding="0"
                        VerticalAlignment="Bottom"
                        Background="{ThemeResource MediaTransportControlsPanelBackground}"
                        Style="{StaticResource BorderCardStyle}"
                        Visibility="Collapsed">
                        <animations:Implicit.ShowAnimations>
                            <animations:TranslationAnimation
                                From="0,56,0"
                                To="0"
                                Duration="0:0:0.5" />
                            <animations:OpacityAnimation To="1.0" Duration="0:0:0.5" />
                        </animations:Implicit.ShowAnimations>

                        <animations:Implicit.HideAnimations>
                            <animations:TranslationAnimation
                                From="0"
                                To="0,56,0"
                                Duration="0:0:0.75" />
                            <animations:OpacityAnimation
                                From="1"
                                To="0"
                                Duration="0:0:0.5" />
                        </animations:Implicit.HideAnimations>
                        <RelativePanel>
                            <StackPanel
                                Orientation="Horizontal"
                                RelativePanel.AlignHorizontalCenterWithPanel="True"
                                RelativePanel.AlignVerticalCenterWithPanel="True">
                                <muxc:ProgressRing
                                    Width="18"
                                    Height="18"
                                    IsActive="True" />

                                <TextBlock
                                    Margin="12,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource BaseTextBlockStyle}">
                                    <Run Text="Indexing" />
                                    <Run Text="{x:Bind MViewModel.IndexedMedia, Mode=OneWay}" />
                                    <Run Text="media from your library. Please wait." />
                                </TextBlock>
                            </StackPanel>

                            <StackPanel
                                Margin="0,0,12,0"
                                Orientation="Horizontal"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.AlignVerticalCenterWithPanel="True">
                                <Button
                                    Padding="8"
                                    Click="GoToScanningSettings_Click"
                                    Style="{ThemeResource TransparentButtonStyle}"
                                    ToolTipService.ToolTip="{markup:ResourceHelper Name=ScanningSettings}">
                                    <FontIcon FontSize="16" Glyph="&#xE115;" />
                                </Button>

                                <Button
                                    Padding="8"
                                    Click="DismissButton_Click"
                                    Style="{ThemeResource TransparentButtonStyle}"
                                    ToolTipService.ToolTip="{markup:ResourceHelper Name=Dismiss}">
                                    <FontIcon FontSize="16" Glyph="&#xE711;" />
                                </Button>
                            </StackPanel>
                        </RelativePanel>
                    </Border>
                    <Border
                        x:Name="FetchingMetadataTip"
                        Grid.Row="1"
                        Height="50"
                        Margin="-16,8,-16,-16"
                        Padding="0"
                        VerticalAlignment="Bottom"
                        Background="{ThemeResource MediaTransportControlsPanelBackground}"
                        Style="{StaticResource BorderCardStyle}"
                        Visibility="Collapsed">
                        <animations:Implicit.ShowAnimations>
                            <animations:TranslationAnimation
                                From="0,56,0"
                                To="0"
                                Duration="0:0:0.5" />
                            <animations:OpacityAnimation To="1.0" Duration="0:0:0.5" />
                        </animations:Implicit.ShowAnimations>

                        <animations:Implicit.HideAnimations>
                            <animations:TranslationAnimation
                                From="0"
                                To="0,56,0"
                                Duration="0:0:0.75" />
                            <animations:OpacityAnimation
                                From="1"
                                To="0"
                                Duration="0:0:0.5" />
                        </animations:Implicit.HideAnimations>
                        <RelativePanel>
                            <StackPanel
                                Orientation="Horizontal"
                                RelativePanel.AlignHorizontalCenterWithPanel="True"
                                RelativePanel.AlignVerticalCenterWithPanel="True">
                                <muxc:ProgressRing
                                    Width="18"
                                    Height="18"
                                    IsActive="True" />

                                <TextBlock
                                    Margin="12,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource BaseTextBlockStyle}"
                                    Text="{markup:ResourceHelper Name=FetchingArtistInfo}" />
                            </StackPanel>

                            <StackPanel
                                Margin="0,0,12,0"
                                Orientation="Horizontal"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.AlignVerticalCenterWithPanel="True">
                                <Button
                                    Padding="8"
                                    Click="GoToScanningSettings_Click"
                                    Style="{ThemeResource TransparentButtonStyle}"
                                    ToolTipService.ToolTip="{markup:ResourceHelper Name=ScanningSettings}">
                                    <FontIcon FontSize="16" Glyph="&#xE115;" />
                                </Button>

                                <Button
                                    Padding="8"
                                    Click="DismissButton_Click"
                                    Style="{ThemeResource TransparentButtonStyle}"
                                    ToolTipService.ToolTip="{markup:ResourceHelper Name=Dismiss}">
                                    <FontIcon FontSize="16" Glyph="&#xE711;" />
                                </Button>
                            </StackPanel>
                        </RelativePanel>
                    </Border>
                    <Border
                        x:Name="SuccessTip"
                        Grid.Row="1"
                        Height="50"
                        Margin="-16,8,-16,-16"
                        Padding="0"
                        VerticalAlignment="Bottom"
                        Background="{ThemeResource MediaTransportControlsPanelBackground}"
                        Style="{StaticResource BorderCardStyle}"
                        Visibility="Collapsed">
                        <animations:Implicit.ShowAnimations>
                            <animations:TranslationAnimation
                                From="0,56,0"
                                To="0"
                                Duration="0:0:0.5" />
                            <animations:OpacityAnimation To="1.0" Duration="0:0:0.5" />
                        </animations:Implicit.ShowAnimations>

                        <animations:Implicit.HideAnimations>
                            <animations:TranslationAnimation
                                From="0"
                                To="0,56,0"
                                Duration="0:0:0.75" />
                            <animations:OpacityAnimation
                                From="1"
                                To="0"
                                Duration="0:0:0.5" />
                        </animations:Implicit.HideAnimations>
                        <RelativePanel>
                            <StackPanel
                                Orientation="Horizontal"
                                RelativePanel.AlignHorizontalCenterWithPanel="True"
                                RelativePanel.AlignVerticalCenterWithPanel="True">
                                <muxc:InfoBadge
                                    Margin="0,1,0,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource SuccessIconInfoBadgeStyle}" />

                                <TextBlock
                                    Margin="12,0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource BaseTextBlockStyle}"
                                    Text="{markup:ResourceHelper Name=IndexingComplete}" />
                            </StackPanel>
                            <StackPanel
                                Margin="0,0,12,0"
                                Orientation="Horizontal"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.AlignVerticalCenterWithPanel="True">
                                <Button
                                    Padding="8"
                                    Click="GoToScanningSettings_Click"
                                    Style="{ThemeResource TransparentButtonStyle}"
                                    ToolTipService.ToolTip="{markup:ResourceHelper Name=ScanningSettings}">
                                    <FontIcon FontSize="16" Glyph="&#xE115;" />
                                </Button>

                                <Button
                                    Padding="8"
                                    Click="DismissButton_Click"
                                    Style="{ThemeResource TransparentButtonStyle}"
                                    ToolTipService.ToolTip="{markup:ResourceHelper Name=Dismiss}">
                                    <FontIcon FontSize="16" Glyph="&#xE711;" />
                                </Button>
                            </StackPanel>
                        </RelativePanel>
                    </Border>

                    <uc:RiseMediaPlayerElement
                        x:Name="MainPlayer"
                        MaxWidth="1000"
                        MediaPlayerVisibility="Collapsed"
                        Visibility="{x:Bind helpers:BindingHelpers.IsNotNullVis(MPViewModel.PlayingItem), Mode=OneWay}">
                        <uc:RiseMediaPlayerElement.TransportControls>
                            <uc:RiseMediaTransportControls
                                x:Name="PlayerControls"
                                ui:Effects.Shadow="{StaticResource LightDropShadow}"
                                AddToPlaylistCommand="{x:Bind AddToPlaylistCommand}"
                                DisplayItemVisibility="Visible"
                                FullWindowCommand="{x:Bind EnterFullScreenCommand}"
                                IsCompactOverlayButtonVisible="True"
                                IsCompactOverlayEnabled="True"
                                IsEqualizerButtonEnabled="True"
                                IsEqualizerButtonVisible="True"
                                IsFullWindowButtonVisible="True"
                                IsFullWindowEnabled="True"
                                IsNextTrackButtonVisible="True"
                                IsPlaybackRateButtonVisible="True"
                                IsPlaybackRateEnabled="True"
                                IsPreviousTrackButtonVisible="True"
                                IsPropertiesButtonVisible="True"
                                IsPropertiesEnabled="True"
                                IsQueueButtonEnabled="True"
                                IsQueueButtonVisible="True"
                                IsRepeatButtonVisible="True"
                                IsRepeatEnabled="True"
                                IsShuffleButtonChecked="{x:Bind MPViewModel.ShuffleEnabled, Mode=TwoWay}"
                                IsShuffleButtonVisible="True"
                                IsShuffleEnabled="True"
                                IsSkipBackwardEnabled="True"
                                IsSkipForwardEnabled="True"
                                IsZoomButtonVisible="False"
                                IsZoomEnabled="False"
                                OverlayCommand="{x:Bind GoToNowPlayingCommand}"
                                ShowAndHideAutomatically="False">
                                <uc:RiseMediaTransportControls.DisplayItem>
                                    <Button
                                        Margin="4"
                                        Padding="4"
                                        HorizontalContentAlignment="Left"
                                        Click="OnDisplayItemClick"
                                        RightTapped="OnDisplayItemRightTapped"
                                        Style="{StaticResource TransparentButtonStyle}">
                                        <Grid
                                            x:Name="ItemGrid"
                                            Height="80"
                                            x:DefaultBindMode="OneWay">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="ImageDefinition" Width="80" />
                                                <ColumnDefinition x:Name="TextDefinition" Width="120" />
                                            </Grid.ColumnDefinitions>

                                            <Border
                                                x:Name="ImageBorder"
                                                Width="80"
                                                HorizontalAlignment="Left"
                                                Background="{StaticResource CurrentItemThumbnailBrush}"
                                                CornerRadius="4">
                                                <Border.RenderTransform>
                                                    <TranslateTransform x:Name="ImageBorderTranslate" X="0" />
                                                </Border.RenderTransform>
                                            </Border>

                                            <StackPanel
                                                x:Name="TextPanel"
                                                Grid.Column="1"
                                                Margin="8,0,0,0"
                                                VerticalAlignment="Center"
                                                Orientation="Vertical">
                                                <TextBlock
                                                    x:Name="DisplayTitle"
                                                    FontSize="16"
                                                    FontWeight="SemiBold"
                                                    MaxLines="2"
                                                    Text="{x:Bind MPViewModel.PlayingItemProperties.Title}"
                                                    TextTrimming="CharacterEllipsis"
                                                    TextWrapping="Wrap"
                                                    ToolTipService.ToolTip="{x:Bind MPViewModel.PlayingItemProperties.Title}" />
                                                <TextBlock
                                                    x:Name="DisplaySubtitle"
                                                    MaxLines="2"
                                                    Text="{x:Bind MPViewModel.PlayingItemProperties.Artist, Converter={StaticResource ResFallback}, ConverterParameter=UnknownArtistResource}"
                                                    TextTrimming="CharacterEllipsis"
                                                    TextWrapping="Wrap"
                                                    ToolTipService.ToolTip="{x:Bind MPViewModel.PlayingItemProperties.Artist, Converter={StaticResource ResFallback}, ConverterParameter=UnknownArtistResource}" />
                                                <StackPanel.RenderTransform>
                                                    <TranslateTransform x:Name="TextPanelTranslate" />
                                                </StackPanel.RenderTransform>
                                            </StackPanel>
                                        </Grid>
                                    </Button>
                                </uc:RiseMediaTransportControls.DisplayItem>
                            </uc:RiseMediaTransportControls>
                        </uc:RiseMediaPlayerElement.TransportControls>
                    </uc:RiseMediaPlayerElement>
                </Grid>
            </Grid>
        </muxc:NavigationView>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideWindow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="NavView.IsPaneToggleButtonVisible" Value="False" />
                        <Setter Target="AppTitle.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="ContentAreaStates">
                <VisualState x:Name="NarrowContentAreaLayout">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames
                            EnableDependentAnimation="True"
                            Storyboard.TargetName="ItemGrid"
                            Storyboard.TargetProperty="Width"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="80">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="TextPanel"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="TextPanelTranslate"
                            Storyboard.TargetProperty="X"
                            Duration="0:0:0.3">
                            <LinearDoubleKeyFrame KeyTime="0" Value="-80" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="ImageBorder"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <LinearDoubleKeyFrame KeyTime="0" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="ImageBorderTranslate"
                            Storyboard.TargetProperty="X"
                            Duration="0:0:0.3">
                            <LinearDoubleKeyFrame KeyTime="0" Value="-40" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <VisualState x:Name="MediumContentAreaLayout">
                    <VisualState.Setters>
                        <Setter Target="TextPanel.(Grid.Column)" Value="0" />
                        <Setter Target="ImageDefinition.Width" Value="120" />
                    </VisualState.Setters>

                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames
                            EnableDependentAnimation="True"
                            Storyboard.TargetName="ItemGrid"
                            Storyboard.TargetProperty="Width"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="120">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="TextPanel"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="TextPanelTranslate"
                            Storyboard.TargetProperty="X"
                            Duration="0:0:0.3">
                            <LinearDoubleKeyFrame KeyTime="0" Value="80" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="ImageBorder"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="ImageBorderTranslate"
                            Storyboard.TargetProperty="X"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-40">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <VisualState x:Name="WideContentAreaLayout">
                    <VisualState.Setters>
                        <Setter Target="PlayerControls.IsSkipBackwardButtonVisible" Value="True" />
                        <Setter Target="PlayerControls.IsSkipForwardButtonVisible" Value="True" />
                    </VisualState.Setters>

                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames
                            EnableDependentAnimation="True"
                            Storyboard.TargetName="ItemGrid"
                            Storyboard.TargetProperty="Width"
                            Duration="0:0:0.3">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="200">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="TextPanelTranslate"
                            Storyboard.TargetProperty="X"
                            Duration="0:0:0.3">
                            <LinearDoubleKeyFrame KeyTime="0" Value="-80" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="ImageBorder"
                            Storyboard.TargetProperty="Opacity"
                            Duration="0:0:0.3">
                            <LinearDoubleKeyFrame KeyTime="0" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetName="ImageBorderTranslate"
                            Storyboard.TargetProperty="X"
                            Duration="0:0:0.3">
                            <LinearDoubleKeyFrame KeyTime="0" Value="-40" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="ScanningStates">
                <VisualState x:Name="ScanningState">
                    <VisualState.Setters>
                        <Setter Target="IndexingTip.Visibility" Value="Visible" />
                        <Setter Target="IndexingProgressRing.IsActive" Value="True" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="FetchingMetadataState">
                    <VisualState.Setters>
                        <Setter Target="FetchingMetadataTip.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ScanningDoneState">
                    <VisualState.Setters>
                        <Setter Target="SuccessTip.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="LastFMStates">
                <VisualState x:Name="LoggedOutState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind LMViewModel.Authenticated.Equals(x:False), Mode=OneWay}" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="Acc.Text" Value="{markup:ResourceHelper Name=AddAccount}" />
                        <Setter Target="AccountPic.Glyph" Value="&#xECC8;" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
