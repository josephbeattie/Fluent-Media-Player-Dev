<Page
    x:Class="Rise.App.Settings.AppearancePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:labs="using:CommunityToolkit.Labs.WinUI"
    xmlns:markup="using:Rise.Common.Extensions.Markup"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:Rise.Models"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:uc="using:Rise.App.UserControls"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    Loaded="OnPageLoaded"
    mc:Ignorable="d">

    <Page.Resources>
        <Thickness x:Key="GridViewItemSelectedBorderThickness">3</Thickness>
        <StaticResource x:Key="GridViewItemBackgroundSelected" ResourceKey="ApplicationForegroundThemeBrush" />
        <StaticResource x:Key="GridViewItemBackgroundSelectedPointerOver" ResourceKey="ApplicationForegroundThemeBrush" />
    </Page.Resources>

    <StackPanel
        Margin="0,12,0,12"
        Orientation="Vertical"
        Spacing="4">
        <StackPanel.ChildrenTransitions>
            <TransitionCollection>
                <RepositionThemeTransition IsStaggeringEnabled="False" />
            </TransitionCollection>
        </StackPanel.ChildrenTransitions>

        <muxc:TeachingTip
            x:Name="ChangeThemeTip"
            Title="{markup:ResourceHelper Name=/Settings/AppThemeChanged}"
            ActionButtonClick="ChangeThemeTip_ActionButtonClick"
            ActionButtonContent="{markup:ResourceHelper Name=RestartNow}"
            CloseButtonContent="{markup:ResourceHelper Name=MaybeLater}"
            IsLightDismissEnabled="True"
            IsOpen="False"
            Subtitle="{markup:ResourceHelper Name=RestartChangesEffect}"
            Target="{x:Bind ThemeChange}" />

        <labs:SettingsCard
            Margin="0,-4,0,0"
            Header="{markup:ResourceHelper Name=/Settings/AppearanceChooseTheme}"
            HeaderIcon="{ui:FontIcon Glyph=&#xE790;}">
            <ComboBox
                x:Name="ThemeChange"
                ItemsSource="{x:Bind Themes}"
                SelectedIndex="{x:Bind ViewModel.Theme, Mode=TwoWay}" />
        </labs:SettingsCard>

        <labs:SettingsExpander
            x:Name="ChooseColorExpander"
            Header="{markup:ResourceHelper Name=/Settings/AppearanceChooseColor}"
            HeaderIcon="{ui:FontIcon Glyph=&#xE771;}">
            <ComboBox
                x:Name="ColorThemeComboBox"
                ItemsSource="{x:Bind ColorThemes}"
                SelectedIndex="{x:Bind ViewModel.ColorTheme, Mode=TwoWay}" />

            <labs:SettingsExpander.Items>
                <labs:SettingsCard>
                    <labs:SettingsCard.Header>
                        <Grid>
                            <TextBlock
                                x:Name="Nothing"
                                HorizontalAlignment="Center"
                                FontSize="14"
                                FontWeight="Normal"
                                HorizontalTextAlignment="Center"
                                Text="{markup:ResourceHelper Name=/Settings/AppearanceNothing}"
                                TextWrapping="WrapWholeWords" />

                            <StackPanel Margin="0,4,0,0" x:Name="CustomColorPanel" Visibility="Collapsed">
                                <TextBlock Style="{StaticResource BodyTextBlockStyle}" Text="{markup:ResourceHelper Name=/Settings/RecentColors}" />
                                <TextBlock
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Text="{markup:ResourceHelper Name=ComingSoon}" />

                                <TextBlock
                                    Margin="0,20,0,0"
                                    Style="{StaticResource BodyTextBlockStyle}"
                                    Text="{markup:ResourceHelper Name=/Settings/WindowsColors}" />
                                <GridView
                                    x:Name="ColorGrid"
                                    MaxWidth="448"
                                    Margin="0,8,0,0"
                                    HorizontalAlignment="Left"
                                    ItemsSource="{x:Bind GlazeColors}"
                                    SelectedIndex="{x:Bind ViewModel.GlazeColorIndex, Mode=TwoWay}"
                                    SelectionMode="Single">
                                    <GridView.ItemTemplate>
                                        <DataTemplate x:DataType="models:NamedColor">
                                            <Border
                                                Width="50"
                                                Height="50"
                                                ToolTipService.ToolTip="{x:Bind Name}">
                                                <Border.Background>
                                                    <SolidColorBrush Color="{x:Bind Color}" />
                                                </Border.Background>
                                            </Border>
                                        </DataTemplate>
                                    </GridView.ItemTemplate>
                                </GridView>
                            </StackPanel>
                        </Grid>
                    </labs:SettingsCard.Header>
                </labs:SettingsCard>

                <labs:SettingsCard Header="{markup:ResourceHelper Name=/Settings/CustomizedColors}">
                    <Button Grid.Column="1" Content="{markup:ResourceHelper Name=/Settings/ViewColors}" />
                </labs:SettingsCard>
            </labs:SettingsExpander.Items>
        </labs:SettingsExpander>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CustomGlazeStates">
                <VisualState x:Name="CustomGlazeDisabled" />
                <VisualState x:Name="CustomGlazeEnabled">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.ColorTheme.Equals(2), Mode=OneWay}" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="Nothing.Visibility" Value="Collapsed" />
                        <Setter Target="CustomColorPanel.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </StackPanel>
</Page>
